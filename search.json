[{"path":"https://deggust.emitanaka.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emi Tanaka. Author, maintainer.","code":""},{"path":"https://deggust.emitanaka.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tanaka E (2022). deggust: Visualise experimental designs edibble ggplot graphics. http://deggust.emitanaka.org, https://github.com/emitanaka/deggust.","code":"@Manual{,   title = {deggust: Visualise experimental designs from edibble as ggplot graphics},   author = {Emi Tanaka},   year = {2022},   note = {http://deggust.emitanaka.org, https://github.com/emitanaka/deggust}, }"},{"path":"https://deggust.emitanaka.org/index.html","id":"deggust-","dir":"","previous_headings":"","what":"An R package that visualise experimental design constructed with edibble as ggplot graphics","title":"An R package that visualise experimental design constructed with edibble as ggplot graphics","text":"aim deggust R-package visualise designs constructed edibble R-package. visualisation ggplot graphics. (WIP)","code":""},{"path":"https://deggust.emitanaka.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package that visualise experimental design constructed with edibble as ggplot graphics","text":"development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"emitanaka/deggust\")"},{"path":"https://deggust.emitanaka.org/index.html","id":"recipe-experimental-designs","dir":"","previous_headings":"","what":"Recipe experimental designs","title":"An R package that visualise experimental design constructed with edibble as ggplot graphics","text":"can see deggust::autoplot() used various edibble designs https://emitanaka.org/edibble-book/cookbook.html. samples .","code":""},{"path":"https://deggust.emitanaka.org/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"An R package that visualise experimental design constructed with edibble as ggplot graphics","text":"Automatic look design layout:  Easy replace unit shape:","code":"library(edibble) library(deggust) #> Loading required package: ggplot2 fac <- takeout(menu_factorial(trt = c(3, 2))) fac #> start_design(\"Factorial Design\") %>% #>   set_units(unit = 42) %>% #>   set_trts(trt1 = 3, #>            trt2 = 2) %>% #>   allot_trts(~unit) %>% #>   assign_trts(\"random\", seed = 440) %>% #>   serve_table()  #>  #> # Factorial Design  #> # An edibble: 42 x 3 #>          unit     trt1     trt2 #>  * <unit(42)> <trt(3)> <trt(2)> #>  1     unit1     trt12    trt21 #>  2     unit2     trt11    trt22 #>  3     unit3     trt13    trt22 #>  4     unit4     trt11    trt21 #>  5     unit5     trt12    trt21 #>  6     unit6     trt11    trt22 #>  7     unit7     trt12    trt21 #>  8     unit8     trt13    trt22 #>  9     unit9     trt13    trt21 #> 10     unit10    trt13    trt21 #> # … with 32 more rows autoplot(fac) hyper_graeco <- takeout(menu_hyper_graeco(t = 6)) hyper_graeco #> start_design(\"Hyper-Graeco-Latin Square Design\") %>% #>   set_units(block1 = 6, #>             block2 = 6, #>             block3 = 6, #>             block4 = 6, #>             unit = ~block1:block2:block3:block4) %>% #>   set_trts(trt = 6) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 253) %>% #>   serve_table()  #>  #> # Hyper-Graeco-Latin Square Design  #> # An edibble: 1,296 x 6 #>       block1    block2    block3    block4       unit      trt #>  * <unit(6)> <unit(6)> <unit(6)> <unit(6)> <unit(1k)> <trt(6)> #>  1   block11   block21   block31   block41     unit1      trt3 #>  2   block12   block21   block31   block41     unit2      trt6 #>  3   block13   block21   block31   block41     unit3      trt1 #>  4   block14   block21   block31   block41     unit4      trt5 #>  5   block15   block21   block31   block41     unit5      trt2 #>  6   block16   block21   block31   block41     unit6      trt4 #>  7   block11   block22   block31   block41     unit7      trt1 #>  8   block12   block22   block31   block41     unit8      trt3 #>  9   block13   block22   block31   block41     unit9      trt4 #> 10   block14   block22   block31   block41     unit10     trt2 #> # … with 1,286 more rows autoplot(hyper_graeco) unit1 <- start_design(name = \"One unit\") %>%     set_trts(trt = 4) %>%     set_units(unit = 16) %>%     allocate_trts(trt ~ unit) %>%     randomise_trts() %>%     serve_table() #> Warning: `randomise_trts` is deprecated. Please use `assign_trts(\"random\")` #> instead. #> Warning: `allocate_trts` is deprecated. Please use `allot_trts` instead.  autoplot(unit1) autoplot(unit1, shape = \"box\") autoplot(unit1, shape = \"triangle\") autoplot(unit1, shape = \"hexagon\",          text = element_text(size = 6,                               color = \"gray\",                              face = \"bold\"))"},{"path":"https://deggust.emitanaka.org/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related work","title":"An R package that visualise experimental design constructed with edibble as ggplot graphics","text":"desplot visualising designs ExploreModelMatrix exploring design matrix ez easy analysis visualization factorial experiments","code":""},{"path":"https://deggust.emitanaka.org/reference/autoplot.edbl_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto plot or ggplot2 of an edibble design — autoplot.edbl_table","title":"Auto plot or ggplot2 of an edibble design — autoplot.edbl_table","text":"Auto plot ggplot2 edibble design","code":""},{"path":"https://deggust.emitanaka.org/reference/autoplot.edbl_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto plot or ggplot2 of an edibble design — autoplot.edbl_table","text":"","code":"# S3 method for edbl_table autoplot(   .edibble,   title = NULL,   aspect_ratio = 1,   shape = \"circle\",   text = FALSE,   image = NULL,   fill = NULL,   node = NULL,   horizontal = TRUE )"},{"path":"https://deggust.emitanaka.org/reference/autoplot.edbl_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto plot or ggplot2 of an edibble design — autoplot.edbl_table","text":".edibble edibble desgin, edibble table edibble graph. title title plot. default name edibble design available. aspect_ratio aspect ratio graph. shape shape unit. text logical value whether show text . Alternatively, can ggplot2::element_text() object customise elements text, e.g., size, font, font face, color, etc. image image use instead shape. file path image supplied. image supplied, shape ingored. fill character vector variable names display. maximum three variables allowed. Currently, assumed variables discrete. general, assumed variables treatment variables. node character vector variable names. assumed variables units. horizontal logical value indicating whether display optimized horizontal display (default) vertical display. yet implemented. ... Unused moment.","code":""},{"path":"https://deggust.emitanaka.org/reference/autoplot.edbl_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto plot or ggplot2 of an edibble design — autoplot.edbl_table","text":"ggplot object.","code":""},{"path":"https://deggust.emitanaka.org/reference/deggust-package.html","id":null,"dir":"Reference","previous_headings":"","what":"deggust: Visualise experimental designs from edibble as ggplot graphics — deggust-package","title":"deggust: Visualise experimental designs from edibble as ggplot graphics — deggust-package","text":"Visualisation designs ggplot graphics.","code":""},{"path":[]},{"path":"https://deggust.emitanaka.org/reference/deggust-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"deggust: Visualise experimental designs from edibble as ggplot graphics — deggust-package","text":"Maintainer: Emi Tanaka dr.emi.tanaka@gmail.com (ORCID)","code":""},{"path":"https://deggust.emitanaka.org/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://deggust.emitanaka.org/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://deggust.emitanaka.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot","code":""},{"path":"https://deggust.emitanaka.org/reference/scale_aes_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Change selected scale where multiple scales of same aesthetic exist — scale_aes_select","title":"Change selected scale where multiple scales of same aesthetic exist — scale_aes_select","text":"Change selected scale multiple scales aesthetic exist","code":""},{"path":"https://deggust.emitanaka.org/reference/scale_aes_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change selected scale where multiple scales of same aesthetic exist — scale_aes_select","text":"","code":"scale_aes_select(i, f, ...)"},{"path":"https://deggust.emitanaka.org/reference/scale_aes_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change selected scale where multiple scales of same aesthetic exist — scale_aes_select","text":"integer denoting scale number. f scale function scale object. ... arguments scale function f.","code":""},{"path":[]},{"path":"https://deggust.emitanaka.org/reference/scale_aes_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change selected scale where multiple scales of same aesthetic exist — scale_aes_select","text":"","code":"scale_aes_select(1, ggplot2::scale_fill_manual, values = c(\"red\", \"white\", \"blue\")) #> <ggproto object: Class ScaleNew, ScaleDiscrete, Scale, gg> #>     aesthetics: fill #>     axis_order: function #>     break_info: function #>     break_positions: function #>     breaks: waiver #>     call: call #>     clone: function #>     dimension: function #>     drop: TRUE #>     expand: waiver #>     get_breaks: function #>     get_breaks_minor: function #>     get_labels: function #>     get_limits: function #>     guide: legend #>     is_discrete: function #>     is_empty: function #>     labels: waiver #>     limits: NULL #>     make_sec_title: function #>     make_title: function #>     map: function #>     map_df: function #>     n.breaks.cache: NULL #>     na.translate: TRUE #>     na.value: grey50 #>     name: waiver #>     palette: function #>     palette.cache: NULL #>     position: left #>     range: <ggproto object: Class RangeDiscrete, Range, gg> #>         range: NULL #>         reset: function #>         train: function #>         super:  <ggproto object: Class RangeDiscrete, Range, gg> #>     rescale: function #>     reset: function #>     scale_name: manual #>     train: function #>     train_df: function #>     transform: function #>     transform_df: function #>     super:  <ggproto object: Class ScaleDiscrete, Scale, gg> scale_aes_select(1, ggplot2::scale_fill_manual(values = c(\"red\", \"white\", \"blue\"))) #> <ggproto object: Class ScaleNew, ScaleDiscrete, Scale, gg> #>     aesthetics: fill #>     axis_order: function #>     break_info: function #>     break_positions: function #>     breaks: waiver #>     call: call #>     clone: function #>     dimension: function #>     drop: TRUE #>     expand: waiver #>     get_breaks: function #>     get_breaks_minor: function #>     get_labels: function #>     get_limits: function #>     guide: legend #>     is_discrete: function #>     is_empty: function #>     labels: waiver #>     limits: NULL #>     make_sec_title: function #>     make_title: function #>     map: function #>     map_df: function #>     n.breaks.cache: NULL #>     na.translate: TRUE #>     na.value: grey50 #>     name: waiver #>     palette: function #>     palette.cache: NULL #>     position: left #>     range: <ggproto object: Class RangeDiscrete, Range, gg> #>         range: NULL #>         reset: function #>         train: function #>         super:  <ggproto object: Class RangeDiscrete, Range, gg> #>     rescale: function #>     reset: function #>     scale_name: manual #>     train: function #>     train_df: function #>     transform: function #>     transform_df: function #>     super:  <ggproto object: Class ScaleDiscrete, Scale, gg>"},{"path":"https://deggust.emitanaka.org/reference/scale_fills.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour scales for multiple scales of the same aesthetic — scale_fills","title":"Colour scales for multiple scales of the same aesthetic — scale_fills","text":"function argument corresponding ggplot2 scale functions index aesthetic name omitted function. E.g. scale_fill1_binned argument scale_filled_binned. multiple fill scales, index aesthetic name determines fill scale modified.","code":""},{"path":"https://deggust.emitanaka.org/reference/scale_fills.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour scales for multiple scales of the same aesthetic — scale_fills","text":"","code":"scale_fill1_binned(...)  scale_fill2_binned(...)  scale_fill3_binned(...)  scale_fill1_brewer(...)  scale_fill2_brewer(...)  scale_fill3_brewer(...)  scale_fill1_continuous(...)  scale_fill2_continuous(...)  scale_fill3_continuous(...)  scale_fill1_date(...)  scale_fill2_date(...)  scale_fill3_date(...)  scale_fill1_datetime(...)  scale_fill2_datetime(...)  scale_fill3_datetime(...)  scale_fill1_discrete(...)  scale_fill2_discrete(...)  scale_fill3_discrete(...)  scale_fill1_manual(...)  scale_fill2_manual(...)  scale_fill3_manual(...)"},{"path":"https://deggust.emitanaka.org/reference/scale_fills.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colour scales for multiple scales of the same aesthetic — scale_fills","text":"... arguments corresponding scale function.","code":""},{"path":[]}]
